// This file was generated by gir (https://github.com/gtk-rs/gir)
// from build
// from gir-files
// DO NOT EDIT

#![allow(non_camel_case_types, non_upper_case_globals, non_snake_case)]
#![allow(
    clippy::approx_constant,
    clippy::type_complexity,
    clippy::unreadable_literal,
    clippy::upper_case_acronyms
)]
#![cfg_attr(docsrs, feature(doc_cfg))]

#[allow(unused_imports)]
use libc::{
    c_char, c_double, c_float, c_int, c_long, c_short, c_uchar, c_uint, c_ulong, c_ushort, c_void,
    intptr_t, size_t, ssize_t, uintptr_t, FILE,
};

#[allow(unused_imports)]
use glib::{gboolean, gconstpointer, gpointer, GType};

// Records
#[derive(Copy, Clone)]
#[repr(C)]
pub struct VpmVideoPlayerMpvClass {
    pub parent_class: gtk::GtkGLAreaClass,
}

impl ::std::fmt::Debug for VpmVideoPlayerMpvClass {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        f.debug_struct(&format!("VpmVideoPlayerMpvClass @ {self:p}"))
            .field("parent_class", &self.parent_class)
            .finish()
    }
}

// Classes
#[repr(C)]
pub struct VpmVideoPlayerMpv {
    _data: [u8; 0],
    _marker: core::marker::PhantomData<(*mut u8, core::marker::PhantomPinned)>,
}

impl ::std::fmt::Debug for VpmVideoPlayerMpv {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        f.debug_struct(&format!("VpmVideoPlayerMpv @ {self:p}"))
            .finish()
    }
}

#[link(name = "video-player-mpv")]
extern "C" {

    //=========================================================================
    // VpmVideoPlayerMpvClass
    //=========================================================================
    pub fn vpm_video_player_mpv_class_render(
        widget: *mut gtk::GtkGLArea,
        ctx: *mut gdk::GdkGLContext,
    ) -> gboolean;

    //=========================================================================
    // VpmVideoPlayerMpv
    //=========================================================================
    pub fn vpm_video_player_mpv_get_type() -> GType;
    pub fn vpm_video_player_mpv_new() -> *mut gtk::GtkWidget;

}
